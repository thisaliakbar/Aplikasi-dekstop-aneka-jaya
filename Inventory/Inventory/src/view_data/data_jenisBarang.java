package view_data;
import tableModel.tm_jenisBarang;
import crud.Crud_JenisBarang;
import model.model_jenisBarang;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.JTableHeader;
import control.Control_jenisBarang;
import java.awt.Color;
import java.awt.Component;
import java.awt.event.ActionEvent;
import java.awt.event.KeyEvent;
import javax.swing.JTable;
import javax.swing.table.DefaultTableCellRenderer;

/**
 *
 * @author usER
 */
public class data_jenisBarang extends javax.swing.JPanel {
    private Control_jenisBarang service = new Crud_JenisBarang();
    private tm_jenisBarang tblModel = new tm_jenisBarang();
    public data_jenisBarang() {
        initComponents();
        tblJenis.getTableHeader().setDefaultRenderer(new data_barang.HeaderColor());
        tblJenis.setRowHeight(50);
        tblJenis.setModel(tblModel);
        
        loadData();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        mainPanel = new javax.swing.JPanel();
        dataJenisBarang = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblJenis = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        bt_tambahData = new javax.swing.JButton();
        bt_hapusData = new javax.swing.JButton();
        bt_batalData = new javax.swing.JButton();
        t_cari = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        tambahJenisBarang = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        bt_simpan = new javax.swing.JButton();
        bt_batal = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        t_kodeJenis = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        t_namaJenis = new javax.swing.JTextField();

        setLayout(new java.awt.CardLayout());

        mainPanel.setLayout(new java.awt.CardLayout());

        dataJenisBarang.setBackground(new java.awt.Color(255, 255, 255));

        tblJenis.setFont(new java.awt.Font("Verdana", 0, 18)); // NOI18N
        tblJenis.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tblJenis.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblJenisMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblJenis);

        jLabel1.setFont(new java.awt.Font("Verdana", 0, 24)); // NOI18N
        jLabel1.setText("Data Jenis Barang");

        bt_tambahData.setBackground(new java.awt.Color(0, 11, 109));
        bt_tambahData.setFont(new java.awt.Font("Verdana", 1, 14)); // NOI18N
        bt_tambahData.setForeground(new java.awt.Color(255, 255, 255));
        bt_tambahData.setText("Tambah");
        bt_tambahData.setBorderPainted(false);
        bt_tambahData.setPreferredSize(new java.awt.Dimension(100, 50));
        bt_tambahData.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt_tambahDataActionPerformed(evt);
            }
        });

        bt_hapusData.setBackground(new java.awt.Color(255, 0, 0));
        bt_hapusData.setFont(new java.awt.Font("Verdana", 1, 14)); // NOI18N
        bt_hapusData.setForeground(new java.awt.Color(255, 255, 255));
        bt_hapusData.setText("Hapus");
        bt_hapusData.setBorderPainted(false);
        bt_hapusData.setPreferredSize(new java.awt.Dimension(100, 50));
        bt_hapusData.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt_hapusDataActionPerformed(evt);
            }
        });

        bt_batalData.setBackground(new java.awt.Color(255, 102, 0));
        bt_batalData.setFont(new java.awt.Font("Verdana", 1, 14)); // NOI18N
        bt_batalData.setForeground(new java.awt.Color(255, 255, 255));
        bt_batalData.setText("Batal");
        bt_batalData.setBorderPainted(false);
        bt_batalData.setPreferredSize(new java.awt.Dimension(100, 50));
        bt_batalData.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt_batalDataActionPerformed(evt);
            }
        });

        t_cari.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        t_cari.setForeground(new java.awt.Color(153, 153, 153));
        t_cari.setText("Cari");
        t_cari.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 0, 0)));
        t_cari.setPreferredSize(new java.awt.Dimension(30, 20));
        t_cari.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                t_cariFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                t_cariFocusLost(evt);
            }
        });
        t_cari.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                t_cariKeyReleased(evt);
            }
        });

        jLabel5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/magnifying-glass.png"))); // NOI18N

        javax.swing.GroupLayout dataJenisBarangLayout = new javax.swing.GroupLayout(dataJenisBarang);
        dataJenisBarang.setLayout(dataJenisBarangLayout);
        dataJenisBarangLayout.setHorizontalGroup(
            dataJenisBarangLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(dataJenisBarangLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(dataJenisBarangLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addGroup(dataJenisBarangLayout.createSequentialGroup()
                        .addComponent(bt_tambahData, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(bt_hapusData, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(bt_batalData, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel5)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(t_cari, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING)
        );
        dataJenisBarangLayout.setVerticalGroup(
            dataJenisBarangLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, dataJenisBarangLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addGroup(dataJenisBarangLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(t_cari, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(dataJenisBarangLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(bt_tambahData, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(bt_hapusData, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(bt_batalData, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 204, Short.MAX_VALUE))
        );

        mainPanel.add(dataJenisBarang, "card2");

        tambahJenisBarang.setBackground(new java.awt.Color(255, 255, 255));

        jLabel3.setFont(new java.awt.Font("Verdana", 0, 24)); // NOI18N
        jLabel3.setText("Tambah Data Jenis Barang");

        bt_simpan.setBackground(new java.awt.Color(0, 11, 109));
        bt_simpan.setFont(new java.awt.Font("Verdana", 1, 12)); // NOI18N
        bt_simpan.setForeground(new java.awt.Color(255, 255, 255));
        bt_simpan.setText("Simpan");
        bt_simpan.setBorderPainted(false);
        bt_simpan.setPreferredSize(new java.awt.Dimension(100, 50));
        bt_simpan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt_simpanActionPerformed(evt);
            }
        });

        bt_batal.setBackground(new java.awt.Color(255, 102, 0));
        bt_batal.setFont(new java.awt.Font("Verdana", 1, 12)); // NOI18N
        bt_batal.setForeground(new java.awt.Color(255, 255, 255));
        bt_batal.setText("Batal");
        bt_batal.setBorderPainted(false);
        bt_batal.setPreferredSize(new java.awt.Dimension(100, 50));
        bt_batal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt_batalActionPerformed(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jLabel2.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        jLabel2.setText("Kode Jenis");

        t_kodeJenis.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        t_kodeJenis.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 0, 0)));
        t_kodeJenis.setPreferredSize(new java.awt.Dimension(1, 30));

        jLabel4.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        jLabel4.setText("Nama Jenis");

        t_namaJenis.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        t_namaJenis.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 0, 0)));
        t_namaJenis.setPreferredSize(new java.awt.Dimension(1, 30));
        t_namaJenis.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                t_namaJenisKeyPressed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(t_kodeJenis, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(t_namaJenis, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel4))
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(t_kodeJenis, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(t_namaJenis, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 97, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout tambahJenisBarangLayout = new javax.swing.GroupLayout(tambahJenisBarang);
        tambahJenisBarang.setLayout(tambahJenisBarangLayout);
        tambahJenisBarangLayout.setHorizontalGroup(
            tambahJenisBarangLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tambahJenisBarangLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(tambahJenisBarangLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addGroup(tambahJenisBarangLayout.createSequentialGroup()
                        .addComponent(bt_simpan, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(bt_batal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(211, Short.MAX_VALUE))
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        tambahJenisBarangLayout.setVerticalGroup(
            tambahJenisBarangLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, tambahJenisBarangLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3)
                .addGap(18, 18, 18)
                .addGroup(tambahJenisBarangLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bt_simpan, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bt_batal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        mainPanel.add(tambahJenisBarang, "card2");

        add(mainPanel, "card2");
    }// </editor-fold>//GEN-END:initComponents

    private void bt_tambahDataActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt_tambahDataActionPerformed
        mainPanel.removeAll();
        mainPanel.repaint();
        mainPanel.revalidate();

        mainPanel.add(tambahJenisBarang);
        mainPanel.repaint();
        mainPanel.revalidate();
        
        t_kodeJenis.setText(service.nomor());
        t_kodeJenis.setEnabled(false);
        
        if(bt_tambahData.getText().equalsIgnoreCase("Ubah")) {
            DataTable();
        }
        
        
    }//GEN-LAST:event_bt_tambahDataActionPerformed

    private void bt_hapusDataActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt_hapusDataActionPerformed
       hapusData();
       bt_tambahData.setText("Tambah");
    }//GEN-LAST:event_bt_hapusDataActionPerformed

    private void bt_batalDataActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt_batalDataActionPerformed
        loadData();
        tampilPanel();
    }//GEN-LAST:event_bt_batalDataActionPerformed

    private void bt_batalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt_batalActionPerformed
        mainPanel.removeAll();
        mainPanel.add(dataJenisBarang);
        mainPanel.repaint();
        mainPanel.revalidate();
    }//GEN-LAST:event_bt_batalActionPerformed

    private void t_cariKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_t_cariKeyReleased
       pencarian();
    }//GEN-LAST:event_t_cariKeyReleased

    private void bt_simpanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt_simpanActionPerformed
        if(bt_simpan.getText().equalsIgnoreCase("Simpan")) {
        simpanData(); 
        }
        else if(bt_simpan.getText().equalsIgnoreCase("Perbarui")) {
            perbaruiData();
        }
    }//GEN-LAST:event_bt_simpanActionPerformed

    private void tblJenisMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblJenisMouseClicked
        if(bt_tambahData.getText().equalsIgnoreCase("Tambah")) {
            bt_tambahData.setText("Ubah");
            bt_hapusData.setVisible(true);
            bt_batalData.setVisible(true);
        }
    }//GEN-LAST:event_tblJenisMouseClicked

    private void t_cariFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_t_cariFocusGained
        if(t_cari.getText().equalsIgnoreCase("Cari")) {
            t_cari.setText("");
            t_cari.setForeground(new Color(0,0,0));
        }
    }//GEN-LAST:event_t_cariFocusGained

    private void t_cariFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_t_cariFocusLost
        if(t_cari.getText().equalsIgnoreCase("")) {
            t_cari.setText("Cari");
        }
    }//GEN-LAST:event_t_cariFocusLost

    private void t_namaJenisKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_t_namaJenisKeyPressed
        if(evt.getKeyCode() == KeyEvent.VK_ENTER) {
            bt_simpanActionPerformed(new ActionEvent(evt.getSource(), evt.getID(), ""));
        }
    }//GEN-LAST:event_t_namaJenisKeyPressed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bt_batal;
    private javax.swing.JButton bt_batalData;
    private javax.swing.JButton bt_hapusData;
    private javax.swing.JButton bt_simpan;
    private javax.swing.JButton bt_tambahData;
    private javax.swing.JPanel dataJenisBarang;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JPanel mainPanel;
    private javax.swing.JTextField t_cari;
    private javax.swing.JTextField t_kodeJenis;
    private javax.swing.JTextField t_namaJenis;
    private javax.swing.JPanel tambahJenisBarang;
    private javax.swing.JTable tblJenis;
    // End of variables declaration//GEN-END:variables

    private void DataTable() {
        dataJenisBarang.setVisible(false);
        tambahJenisBarang.setVisible(true);
        int row = tblJenis.getSelectedRow();
        jLabel3.setText("Perbarui Data Jenis Barang");
        t_kodeJenis.setEnabled(false);
        t_namaJenis.setEnabled(true);
        t_namaJenis.requestFocus();
        
        t_kodeJenis.setText(tblJenis.getModel().getValueAt(row, 0).toString());
        t_namaJenis.setText(tblJenis.getModel().getValueAt(row, 1).toString());
        
        bt_simpan.setText("Perbarui");
        bt_batal.setVisible(true);
        
    }
    
    private void resetForm() {
        t_kodeJenis.setText("");
        t_namaJenis.setText("");
    }
    
    private void tampilPanel() {
        mainPanel.removeAll();
        mainPanel.add(new data_jenisBarang());
        mainPanel.repaint();
        mainPanel.revalidate();
        
    }
    
    private void loadData() {
        bt_hapusData.setVisible(false);
        bt_batalData.setVisible(false);
        List<model_jenisBarang> list = service.getData();
        tblModel.setData(list);
    }
    
    private void hapusData() {
        int index = tblJenis.getSelectedRow();
        if(index != -1) {
            model_jenisBarang jenbar = tblModel.getData(tblJenis.convertRowIndexToModel(index));
            if(JOptionPane.showConfirmDialog(null, "Yakin data ingin dihapus?", "Konfirmasi", JOptionPane.OK_CANCEL_OPTION) == JOptionPane.OK_OPTION ){
                if(service.validasiHapus(jenbar)==true) {
                service.hapusData(jenbar);
                tblModel.hapusData(index);
                loadData();
                resetForm();  
                }
            }
        }
    }
    
    private void simpanData() {
        String kode = t_kodeJenis.getText();
        String nama = t_namaJenis.getText();
        
        model_jenisBarang jenisBarang = new model_jenisBarang();
        jenisBarang.setKode_jenis(kode);
        jenisBarang.setNama_jenis(nama);
        
        if(service.validasiNamaJenisBarang(jenisBarang) == true) {
        if(validasiInput()==true) {
        String kode_jenis = t_kodeJenis.getText();
        String nama_jenis = t_namaJenis.getText();
        
        model_jenisBarang mjb = new model_jenisBarang();
        mjb.setKode_jenis(kode_jenis);
        mjb.setNama_jenis(nama_jenis);
        service.tambahData(mjb);
        tblModel.tambahData(mjb);
        loadData();
        resetForm();
        tampilPanel();
//        bt_simpan.setText("Tambah");
            }
        }
//        
//        if(service.validasiNamaJenisBarang(jenisBarang)==true) {
//  
//        }
    }
    
    private void perbaruiData() {
        int index = tblJenis.getSelectedRow();
        if(index != 1) {
            model_jenisBarang modJenBar = tblModel.getData(tblJenis.convertRowIndexToModel(index));
            String kode = t_kodeJenis.getText();
            String nama = t_namaJenis.getText();
            model_jenisBarang jenisBarang = new model_jenisBarang();
            jenisBarang.setKode_jenis(kode);
            jenisBarang.setNama_jenis(nama);
            
            if(service.validasiNamaJenisBarang(jenisBarang)==true) {
                if(validasiInput()==true) {
                    String kode_jenis = t_kodeJenis.getText();
                    String nama_jenis = t_namaJenis.getText();
                    
                    model_jenisBarang mjb = new model_jenisBarang();
                    mjb.setKode_jenis(kode_jenis);
                    mjb.setNama_jenis(nama_jenis);
                    
                    service.perbaruiData(mjb);
                    tblModel.perbaruiData(index, mjb);
                    loadData();
                    resetForm();
                    tampilPanel();
                }
            }
        }
    }
    
    private void pencarian() {
        List<model_jenisBarang> list = service.pencarian(t_cari.getText());
        tblModel.setData(list);
    }
    
    private boolean validasiInput() {
        boolean valid = false;
        if(t_kodeJenis.getText().trim().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Kode jenis tidak boleh kosong");
        } else if(t_namaJenis.getText().trim().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Nama jenis tidak boleh kosong");
        } else {
            valid = true;
        }
        
        return valid;
    }
    
    static public class HeaderColor extends DefaultTableCellRenderer{

        public HeaderColor() {
            setOpaque(true);
        }
        
        public Component getTableCellRendererComponent(JTable tbl_contoh, Object value, boolean selected, boolean focused, int row, int column) {
            super.getTableCellRendererComponent(tbl_contoh, value, selected, focused, row, column);
            setBackground(new Color(0,139,185,255));
            setForeground(new Color(255, 255, 255));
            return this;
        }
    
    }
}
