package view;

import com.formdev.flatlaf.themes.FlatMacLightLaf;
import java.awt.Color;
import java.util.ArrayList;
import javax.swing.ImageIcon;
import javax.swing.JFrame;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import view_data.data_jenisBarang;
import view_data.data_pengguna;
import view_data.data_supliyer;
import java.awt.Font;
import java.awt.Graphics2D;
import java.awt.GraphicsDevice;
import java.awt.GraphicsEnvironment;
import java.awt.HeadlessException;
import java.awt.image.BufferedImage;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.Locale;
import javax.swing.JOptionPane;
import view_data.data_barang;
import view_laporan.laporan_barangKeluar;
import view_laporan.laporan_barangMasuk;
import view_laporan.laporan_pemesanan;
import view_transaksi.transaksi_barangKeluar;
import view_transaksi.transaksi_barangMasuk;
import view_transaksi.transaksi_pemesanan;


/**
 *
 * @author usER
 */
public class view_menu extends javax.swing.JFrame {
    static boolean maximize = true;
    int xx;
    int xy;
    
    
    /**
     * Creates new form Menu_Utama
     */
//    Menangkap fungsi yang ada di ps_login
    public view_menu(String id, String nama, String level) {
        initComponents();
        lb_idUser.setText(id);
        lb_nama.setText(nama);
        lb_level.setText(level);

        btnClose.setBackground(null);
        btnMaximize.setBackground(null);
        btnMinimize.setBackground(null);
        this.setExtendedState(JFrame.MAXIMIZED_BOTH);
        
        Date now = new Date();
        SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
        txt_tanggal.setText(sdf.format(now));
        
        
        menu(lb_level.getText());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pn_navbar = new javax.swing.JPanel();
        btnClose = new javax.swing.JButton();
        btnMaximize = new javax.swing.JButton();
        btnMinimize = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        lb_nama = new javax.swing.JLabel();
        lb_idUser = new javax.swing.JLabel();
        lb_level = new javax.swing.JLabel();
        txt_tanggal = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        pn_sidebar = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        pn_menu = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        pn_content = new javax.swing.JPanel();
        pn_utama = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);
        addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                formMouseDragged(evt);
            }
        });
        addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                formMousePressed(evt);
            }
        });
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        pn_navbar.setBackground(new java.awt.Color(0, 6, 189));
        pn_navbar.setPreferredSize(new java.awt.Dimension(909, 95));

        btnClose.setBackground(new java.awt.Color(0, 11, 109));
        btnClose.setForeground(new java.awt.Color(0, 11, 109));
        btnClose.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/closeMenu.png"))); // NOI18N
        btnClose.setContentAreaFilled(false);
        btnClose.setOpaque(true);
        btnClose.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnCloseMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnCloseMouseExited(evt);
            }
        });
        btnClose.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCloseActionPerformed(evt);
            }
        });
        btnClose.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                btnClosePropertyChange(evt);
            }
        });

        btnMaximize.setBackground(new java.awt.Color(0, 11, 109));
        btnMaximize.setForeground(new java.awt.Color(0, 11, 109));
        btnMaximize.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/maximize.png"))); // NOI18N
        btnMaximize.setContentAreaFilled(false);
        btnMaximize.setOpaque(true);
        btnMaximize.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnMaximizeMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnMaximizeMouseExited(evt);
            }
        });
        btnMaximize.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMaximizeActionPerformed(evt);
            }
        });

        btnMinimize.setBackground(new java.awt.Color(0, 11, 109));
        btnMinimize.setForeground(new java.awt.Color(0, 11, 109));
        btnMinimize.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/minimize-sign.png"))); // NOI18N
        btnMinimize.setContentAreaFilled(false);
        btnMinimize.setOpaque(true);
        btnMinimize.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnMinimizeMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnMinimizeMouseExited(evt);
            }
        });
        btnMinimize.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMinimizeActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Verdana", 1, 20)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Hello");

        lb_nama.setBackground(new java.awt.Color(255, 255, 255));
        lb_nama.setFont(new java.awt.Font("Verdana", 1, 20)); // NOI18N
        lb_nama.setForeground(new java.awt.Color(255, 255, 255));
        lb_nama.setText("Nama");

        lb_idUser.setBackground(new java.awt.Color(255, 255, 255));
        lb_idUser.setFont(new java.awt.Font("Verdana", 1, 14)); // NOI18N
        lb_idUser.setForeground(new java.awt.Color(255, 255, 255));
        lb_idUser.setText("ID_USER");

        lb_level.setBackground(new java.awt.Color(255, 255, 255));
        lb_level.setFont(new java.awt.Font("Verdana", 1, 14)); // NOI18N
        lb_level.setForeground(new java.awt.Color(255, 255, 255));
        lb_level.setText("Level");

        txt_tanggal.setBackground(new java.awt.Color(255, 255, 255));
        txt_tanggal.setFont(new java.awt.Font("Verdana", 0, 18)); // NOI18N
        txt_tanggal.setForeground(new java.awt.Color(255, 255, 255));
        txt_tanggal.setText("Tanggal");

        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/letter-a.png"))); // NOI18N

        javax.swing.GroupLayout pn_navbarLayout = new javax.swing.GroupLayout(pn_navbar);
        pn_navbar.setLayout(pn_navbarLayout);
        pn_navbarLayout.setHorizontalGroup(
            pn_navbarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pn_navbarLayout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pn_navbarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pn_navbarLayout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lb_nama, javax.swing.GroupLayout.PREFERRED_SIZE, 326, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(lb_idUser, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lb_level, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(215, 266, Short.MAX_VALUE)
                .addGroup(pn_navbarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pn_navbarLayout.createSequentialGroup()
                        .addComponent(btnMinimize)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnMaximize)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnClose))
                    .addComponent(txt_tanggal, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        pn_navbarLayout.setVerticalGroup(
            pn_navbarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pn_navbarLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pn_navbarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, pn_navbarLayout.createSequentialGroup()
                        .addGroup(pn_navbarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(lb_nama))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lb_idUser)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(lb_level))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, pn_navbarLayout.createSequentialGroup()
                        .addGroup(pn_navbarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pn_navbarLayout.createSequentialGroup()
                                .addGroup(pn_navbarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(btnMinimize)
                                    .addComponent(btnMaximize)
                                    .addComponent(btnClose))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txt_tanggal)
                                .addGap(4, 4, 4)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addGap(41, 41, 41))
        );

        getContentPane().add(pn_navbar, java.awt.BorderLayout.PAGE_START);

        pn_sidebar.setBackground(new java.awt.Color(255, 255, 255));
        pn_sidebar.setPreferredSize(new java.awt.Dimension(270, 485));

        jScrollPane1.setBackground(new java.awt.Color(255, 255, 255));
        jScrollPane1.setBorder(null);
        jScrollPane1.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jScrollPane1.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);
        jScrollPane1.setHorizontalScrollBar(null);
        jScrollPane1.setOpaque(false);

        pn_menu.setBackground(new java.awt.Color(255, 255, 255));
        pn_menu.setLayout(new javax.swing.BoxLayout(pn_menu, javax.swing.BoxLayout.Y_AXIS));
        jScrollPane1.setViewportView(pn_menu);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jLabel5.setBackground(new java.awt.Color(0, 149, 218));
        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setText("ANEKA JAYA");
        jLabel5.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jLabel5.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jLabel5.setOpaque(true);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(204, 204, 204)
                .addComponent(jLabel6)
                .addContainerGap(63, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 37, Short.MAX_VALUE)
                .addComponent(jLabel5)
                .addContainerGap())
        );

        javax.swing.GroupLayout pn_sidebarLayout = new javax.swing.GroupLayout(pn_sidebar);
        pn_sidebar.setLayout(pn_sidebarLayout);
        pn_sidebarLayout.setHorizontalGroup(
            pn_sidebarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pn_sidebarLayout.createSequentialGroup()
                .addGroup(pn_sidebarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane1))
                .addGap(3, 3, 3))
        );
        pn_sidebarLayout.setVerticalGroup(
            pn_sidebarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pn_sidebarLayout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 351, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        getContentPane().add(pn_sidebar, java.awt.BorderLayout.LINE_START);

        pn_content.setBackground(new java.awt.Color(255, 255, 255));

        pn_utama.setBackground(new java.awt.Color(255, 255, 255));
        pn_utama.setLayout(new java.awt.BorderLayout());

        javax.swing.GroupLayout pn_contentLayout = new javax.swing.GroupLayout(pn_content);
        pn_content.setLayout(pn_contentLayout);
        pn_contentLayout.setHorizontalGroup(
            pn_contentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pn_utama, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 639, Short.MAX_VALUE)
        );
        pn_contentLayout.setVerticalGroup(
            pn_contentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pn_utama, javax.swing.GroupLayout.DEFAULT_SIZE, 460, Short.MAX_VALUE)
        );

        getContentPane().add(pn_content, java.awt.BorderLayout.CENTER);

        setSize(new java.awt.Dimension(909, 555));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        pn_utama.add(new beranda(txt_tanggal.getText()));
        pn_utama.repaint();
        pn_utama.revalidate();
    }//GEN-LAST:event_formWindowOpened

    private void formMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseDragged
        if(maximize) {
        int x = evt.getXOnScreen();
        int y = evt.getYOnScreen();
        this.setLocation(x - xx, y - xy);   
        }
    }//GEN-LAST:event_formMouseDragged

    private void formMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMousePressed
        xx = evt.getX();
        xy = evt.getY();
    }//GEN-LAST:event_formMousePressed

    private void btnCloseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCloseActionPerformed
        String[] objBtn = {"YES", "NO"};
        int pilihan = JOptionPane.showOptionDialog(null, "Apakah anda yakin ingin keluar", "Message", JOptionPane.DEFAULT_OPTION, JOptionPane.QUESTION_MESSAGE, null
                , objBtn, objBtn[1]);
        if(pilihan == 0) {
            System.exit(0);
        }
    }//GEN-LAST:event_btnCloseActionPerformed

    private void btnMaximizeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMaximizeActionPerformed
        if(maximize) {
            this.setExtendedState(JFrame.MAXIMIZED_BOTH);
            GraphicsEnvironment ge = new GraphicsEnvironment() {
                @Override
                public GraphicsDevice[] getScreenDevices() throws HeadlessException {
                    throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
                }

                @Override
                public GraphicsDevice getDefaultScreenDevice() throws HeadlessException {
                    throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
                }

                @Override
                public Graphics2D createGraphics(BufferedImage img) {
                    throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
                }

                @Override
                public Font[] getAllFonts() {
                    throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
                }

                @Override
                public String[] getAvailableFontFamilyNames() {
                    throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
                }

                @Override
                public String[] getAvailableFontFamilyNames(Locale l) {
                    throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
                }
            }.getLocalGraphicsEnvironment();
            view_menu.this.setMaximizedBounds(ge.getMaximumWindowBounds());
            maximize = false;
        }
        else {
            setExtendedState(NORMAL);
            maximize = true;
        }
    }//GEN-LAST:event_btnMaximizeActionPerformed

    private void btnMinimizeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMinimizeActionPerformed
        this.setExtendedState(ICONIFIED);
    }//GEN-LAST:event_btnMinimizeActionPerformed

    private void btnCloseMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnCloseMouseEntered
        btnClose.setBackground(Color.RED);
    }//GEN-LAST:event_btnCloseMouseEntered

    private void btnMaximizeMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnMaximizeMouseEntered
        btnMaximize.setBackground(new Color(36, 3, 252));
    }//GEN-LAST:event_btnMaximizeMouseEntered

    private void btnMinimizeMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnMinimizeMouseEntered
        btnMinimize.setBackground(new Color(36, 3, 252));
    }//GEN-LAST:event_btnMinimizeMouseEntered

    private void btnCloseMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnCloseMouseExited
        btnClose.setBackground(null);
    }//GEN-LAST:event_btnCloseMouseExited

    private void btnMaximizeMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnMaximizeMouseExited
        btnMaximize.setBackground(null);
    }//GEN-LAST:event_btnMaximizeMouseExited

    private void btnMinimizeMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnMinimizeMouseExited
        btnMinimize.setBackground(null);
    }//GEN-LAST:event_btnMinimizeMouseExited

    private void btnClosePropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_btnClosePropertyChange
        // TODO add your handling code here:
    }//GEN-LAST:event_btnClosePropertyChange

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        
        FlatMacLightLaf.setup();
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new view_menu("id", "nama", "level").setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnClose;
    private javax.swing.JButton btnMaximize;
    private javax.swing.JButton btnMinimize;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lb_idUser;
    private javax.swing.JLabel lb_level;
    private javax.swing.JLabel lb_nama;
    private javax.swing.JPanel pn_content;
    private javax.swing.JPanel pn_menu;
    private javax.swing.JPanel pn_navbar;
    private javax.swing.JPanel pn_sidebar;
    private javax.swing.JPanel pn_utama;
    private javax.swing.JLabel txt_tanggal;
    // End of variables declaration//GEN-END:variables

    private void menu(String level) {
        ImageIcon iconHome = new ImageIcon(getClass().getResource("/img/home.png"));
        
        ImageIcon iconMaster = new ImageIcon(getClass().getResource("/img/option.png"));
        ImageIcon iconBarang = new ImageIcon(getClass().getResource("/img/box.png"));
        ImageIcon iconJenisBarang = new ImageIcon(getClass().getResource("/img/jenisBarang.png"));
        ImageIcon iconSupliyer = new ImageIcon(getClass().getResource("/img/warehouse.png"));
        ImageIcon iconPengguna = new ImageIcon(getClass().getResource("/img/user.png"));
        
        ImageIcon iconTransaksi = new ImageIcon(getClass().getResource("/img/transaction.png"));
        ImageIcon iconPemesananBarang = new ImageIcon(getClass().getResource("/img/pemesanan.png"));
        ImageIcon iconBarangMas = new ImageIcon(getClass().getResource("/img/in.png"));
        ImageIcon iconBarangKel = new ImageIcon(getClass().getResource("/img/out.png"));
        
        ImageIcon iconLaporan = new ImageIcon(getClass().getResource("/img/laporan.png"));
        ImageIcon iconLogout = new ImageIcon(getClass().getResource("/img/logout.png"));
        
        MenuItem menuHome = new MenuItem(iconHome, false, null, "Beranda", new ActionListener(){
            @Override
            public void actionPerformed(ActionEvent e) {
                pn_utama.removeAll();
                pn_utama.repaint();
                pn_utama.revalidate();
                
                pn_utama.add(new beranda(txt_tanggal.getText()));
                pn_utama.repaint();
                pn_utama.revalidate();
            }
            
        });
        
        MenuItem jenisBarang = new MenuItem(null, true, iconJenisBarang, "Jenis Barang", new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                pn_utama.removeAll();
                pn_utama.add(new data_jenisBarang());
                pn_utama.repaint();
                pn_utama.revalidate();
            }
            
        });
        
        MenuItem barang = new MenuItem(null, true, iconBarang, "Barang", new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                pn_utama.removeAll();
                pn_utama.add(new data_barang());
                pn_utama.repaint();
                pn_utama.revalidate();
            }
            
        });
        

        MenuItem pengguna = new MenuItem(null, true, iconPengguna, "Pengguna", new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                pn_utama.removeAll();
                pn_utama.add(new data_pengguna());
                pn_utama.repaint();
                pn_utama.revalidate();
            }
        });
        
        MenuItem supliyer = new MenuItem(null, true, iconSupliyer, "Supplier", new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                pn_utama.removeAll();
                pn_utama.add(new data_supliyer());
                pn_utama.repaint();
                pn_utama.revalidate();
            }
        });
        
        
        MenuItem pemesananBarang = new MenuItem(null, true, iconPemesananBarang, "Pemesanan", new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                pn_utama.removeAll();
                pn_utama.add(new transaksi_pemesanan(lb_idUser.getText()));
                pn_utama.repaint();
                pn_utama.revalidate();
            }
        });
        MenuItem barangMasuk = new MenuItem(null, true, iconBarangMas, "Barang Masuk", new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                pn_utama.removeAll();
                pn_utama.add(new transaksi_barangMasuk(lb_idUser.getText()));
                pn_utama.repaint();
                pn_utama.revalidate();
                
            }
        });
        MenuItem barangKeluar = new MenuItem(null, true, iconBarangKel, "Barang Keluar", new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                pn_utama.removeAll();
                pn_utama.add(new transaksi_barangKeluar(lb_idUser.getText()));
                pn_utama.repaint();
                pn_utama.revalidate();
            }
        });
        
        MenuItem rPemesananBarang = new MenuItem(null, true, iconPemesananBarang, "Pemesanan", new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                pn_utama.removeAll();
                pn_utama.add(new laporan_pemesanan());
                pn_utama.repaint();
                pn_utama.revalidate();
            }
        });
        MenuItem rBarangMas= new MenuItem(null, true, iconBarangMas, "Barang Masuk", new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                pn_utama.removeAll();
                pn_utama.add(new laporan_barangMasuk());
                pn_utama.repaint();
                pn_utama.revalidate();
            }
        });
        MenuItem rBarangKel = new MenuItem(null, true, iconBarangKel, "Barang Keluar", new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                pn_utama.removeAll();
                pn_utama.add(new laporan_barangKeluar());
                pn_utama.repaint();
                pn_utama.revalidate();
            }
        });
        
        MenuItem menuMaster = new MenuItem(iconMaster, false, null, "Data", null, jenisBarang, barang,supliyer, pengguna);
        MenuItem menuTransaksi = new MenuItem(iconTransaksi, false, null, "Transaksi", null, pemesananBarang, barangMasuk, barangKeluar);
        MenuItem menuReport = new MenuItem(iconLaporan, false, null, "Laporan", null,rPemesananBarang, rBarangMas, rBarangKel);
        MenuItem menuLogout = new MenuItem(iconLogout, false, null, "Logout", new ActionListener(){
            @Override
            public void actionPerformed(ActionEvent e) {
                pn_navbar.removeAll();
                pn_navbar.repaint();
                pn_navbar.revalidate();
                
                pn_sidebar.removeAll();
                pn_sidebar.repaint();
                pn_sidebar.revalidate();
                
                pn_content.removeAll();
                pn_content.repaint();
                pn_sidebar.revalidate();
                
                view_login logout = new view_login();
                logout.setVisible(true);
                logout.revalidate();
                
                dispose();
            }
            
        });
                
        if(level.equals("Pemilik")) {
        addMenu(menuHome, menuMaster, menuTransaksi, menuReport, menuLogout);
        } else {
            addMenu(menuHome, menuTransaksi, menuReport, menuLogout);
        }
        
    }
    
//    private void menuMouseClicked(java.awt.event.ActionEvent evt) {
//        view_login logout = new view_login();
//        logout.setVisible(true);
//        logout.revalidate();
//        
//        dispose();
//    }
    
    private void addMenu(MenuItem...menu) {
        for(int i = 0;i < menu.length; i++) {
            pn_menu.add(menu[i]);
            ArrayList<MenuItem> subMenu = menu[i].getSubMenu();
            for(MenuItem m : subMenu) {
                addMenu(m);
            }
        }
        pn_menu.revalidate();
    }
}
